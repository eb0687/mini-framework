"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[47],{7958:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"signal","title":"Reactivity","description":"This module implements a lightweight reactivity system similar to what you\'d find in frameworks like SolidJS, Vue\u2019s, REACT reactivity core.","source":"@site/docs/signal.md","sourceDirName":".","slug":"/signal","permalink":"/mini-framework/docs/intro/docs/signal","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Routing","permalink":"/mini-framework/docs/intro/docs/routing"},"next":{"title":"Examples","permalink":"/mini-framework/docs/intro/docs/examples"}}');var s=i(4848),o=i(8453);const a={sidebar_position:4},r="Reactivity",l={},c=[{value:"Signal",id:"signal",level:2},{value:"What It Does",id:"what-it-does",level:3},{value:"Usage",id:"usage",level:3}];function d(n){const e={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"reactivity",children:"Reactivity"})}),"\n",(0,s.jsx)(e.p,{children:"This module implements a lightweight reactivity system similar to what you'd find in frameworks like SolidJS, Vue\u2019s, REACT reactivity core."}),"\n",(0,s.jsx)(e.h2,{id:"signal",children:"Signal"}),"\n",(0,s.jsx)(e.p,{children:"The Signal function lets you create a reactive value. That means when the value changes,\nanything that depends on it can update automatically \u2014 like parts of your web page.\nThink of it like a smart variable that knows when it changes, and tells others."}),"\n",(0,s.jsx)(e.h3,{id:"what-it-does",children:"What It Does"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"You get an object with a .value that you can get or set."}),"\n",(0,s.jsx)(e.li,{children:"You can subscribe to changes \u2014 run a function every time the value changes."}),"\n",(0,s.jsx)(e.li,{children:"You can bind it to the DOM \u2014 so the page updates when the value changes."}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"Basic usage"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"const count = Signal(0); // initialize count as 0\nconsole.log(count); // 0\ncount.value = 5; // update the value\nconsole.log(count.value); // 5\n"})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.ol,{start:"2",children:["\n",(0,s.jsx)(e.li,{children:"Subscribe to changes"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:'const name = Signal("Alice");\n\nname.subscribe((sig) => {\n  console.log("Name is now", sig.value);\n});\n\nname.value = "Bob"; // Logs: Name is now Bob\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.ol,{start:"3",children:["\n",(0,s.jsx)(e.li,{children:"Binding to the DOM"}),"\n"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Bind a signal to a text node"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:'import { div, Signal } from "../../framework";\nimport { router } from "../../framework/router";\n\nconst greeting = Signal("Hello World!");\nconst greetingDisplay = greeting.bind((v) => div({}, `${v}`));\n\nsetTimeout(() => {\n  greeting.value = "Hello Universe!";\n}, 2000);\n\nconst page = div({ class: "app" }, greetingDisplay);\n\nconst pageNotFound = div({ class: "not-found" }, "Page Not Found");\n\nwindow.routes = {\n  "/": page,\n  "/404": pageNotFound,\n};\nrouter();\n'})}),"\n",(0,s.jsx)(e.p,{children:"Bind a signal with a custom element callback"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:'import { div, Signal } from "../../framework";\nimport { router } from "../../framework/router";\n\nconst counter = Signal(0);\nconst counterDisplay = counter.bind((value) => div({}, `Count: ${value}`));\n\nsetInterval(() => {\n  counter.value++;\n}, 2000);\n\nconst pageNotFound = div({ class: "not-found" }, "Page Not Found");\n\nwindow.routes = {\n  "/": counterDisplay,\n  "/404": pageNotFound,\n};\n\nrouter();\n'})}),"\n",(0,s.jsxs)(e.admonition,{type:"note",children:[(0,s.jsx)(e.p,{children:"Use .bind() when:"}),(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"You want to keep DOM in sync with signal changes"}),"\n",(0,s.jsx)(e.li,{children:"You want to create auto-updating UI nodes (like counters, input display, etc.)"}),"\n"]}),(0,s.jsx)(e.p,{children:"Avoid it for:"}),(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Complex component trees (manual .subscribe() might be better)"}),"\n",(0,s.jsx)(e.li,{children:"Cases where you need transition animations or conditional logic"}),"\n"]})]})]})}function u(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>a,x:()=>r});var t=i(6540);const s={},o=t.createContext(s);function a(n){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:a(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);